name: CI-plot
on:
  push:
    branches: [master, main]
    tags: ["*"]
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - t=${{ matrix.threads }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        threads:
          - '2'
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - uses: julia-actions/julia-buildpkg@v1
      - name: Run the tests
        id: tests
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --color=yes --project=@. -e 'using Pkg; Pkg.test("QuantumSavory", test_args=["plotting_cairo", "plotting_gl", "examples"], coverage=true)' && echo "TESTS_SUCCESSFUL=true" >> $GITHUB_ENV
        env:
          JULIA_NUM_THREADS: ${{ matrix.threads }}
          QUANTUMSAVORY_PLOT_TEST: true
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info

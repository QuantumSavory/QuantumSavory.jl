using QuantumSavory
using QuantumClifford


bg = CliffordRepr()

regA = Register([Qubit() for _ in 1:3], [bg for _ in 1:3]) # Alice
regB = Register([Qubit() for _ in 1:3], [bg for _ in 1:3]) # Bob

net = RegisterNet([regA, regB])

# Alice and Bob share three bell pairs
bell = StabilizerState("XX ZZ")
for i in 1:3
    initialize!((net[1][i], net[2][i]), bell)
end

# Alice applies CZ gates to create "ZZX XIZ IXZ" and measures in X
pm = 3 # "piecemaker"
for i in [1,2]
    apply!((net[1][pm], net[1][i]), ZCZ)
end
for i in order
    zmeas = project_traceout!(net[1][i], X) 
    if zmeas==2 apply!(net[2][i], Z) end # Bob applies correction immediately after Alice's measurement (ftl)
end

# Reference graph - did they create the correct graph state?
graph = Graph()
add_vertices!(graph, 3)
add_edge!(graph, (1, pm))
add_edge!(graph, (2, pm))
@info "STABILIZER" Stabilizer(graph)

# Calculate fidelity
@info"PROJECTORS THE SAME?", projector(Ket(Stabilizer(graph))) == express(projector(StabilizerState(Stabilizer(graph))))

# using `StabilizerState`
# this only works as expected when using `CliffordRepr` (it should be 1 and is 1) but does not when using `QuantumOpticsRepr` (is 0.25
fidel = real(observable(net[2][1:3], projector(StabilizerState(Stabilizer(graph)))))
@info fidel 

# addition check using `Ket`
if bg == QuantumOpticsRepr() # this naturally cannot be used with `CliffordRepr`
    fidel = real(observable(net[2][1:3], projector(Ket(Stabilizer(graph))))) # works as expected (should be 1 and is 1)
    @info fidel 
end

